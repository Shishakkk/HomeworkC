#include <iostream>
#include <string>
#include <iomanip>

using namespace std;

class Employee {
protected:
    string name;
    double salary;

public:
    Employee(const string& name, double salary)
        : name(name), salary(salary) {
    }

    virtual double calculateBonus() const = 0;
    virtual string getRole() const = 0;
    virtual void printDetails() const = 0;
    virtual ~Employee() {}
};

class Manager : public Employee {
    int numberOfSubordinates;

public:
    Manager(const string& name, double salary, int subs)
        : Employee(name, salary), numberOfSubordinates(subs) {
    }

    double calculateBonus() const override {
        return salary * 0.05 * numberOfSubordinates;
    }

    string getRole() const override { return "Менеджер"; }

    void printDetails() const override {
        cout << "Должность: " << getRole() << endl
            << "Имя: " << name << endl
            << "Оклад: $" << fixed << setprecision(2) << salary << endl
            << "Подчиненные: " << numberOfSubordinates << " чел.\n";
    }
};

class Developer : public Employee {
    int numberOfProjects;

public:
    Developer(const string& name, double salary, int projects)
        : Employee(name, salary), numberOfProjects(projects) {
    }

    double calculateBonus() const override {
        return salary * 0.15 * numberOfProjects;
    }

    string getRole() const override { return "Разработчик"; }

    void printDetails() const override {
        cout << "Должность: " << getRole() << endl
            << "Имя: " << name << endl
            << "Оклад: $" << fixed << setprecision(2) << salary << endl
            << "Проекты: " << numberOfProjects << " шт.\n";
    }
};

class Intern : public Employee {
    int internshipDuration;

public:
    Intern(const string& name, double salary, int duration)
        : Employee(name, salary), internshipDuration(duration) {
    }

    double calculateBonus() const override {
        return (internshipDuration > 3) ? 1000.0 : 0.0;
    }

    string getRole() const override { return "Стажер"; }

    void printDetails() const override {
        cout << "Должность: " << getRole() << endl
            << "Имя: " << name << endl
            << "Зарплата: $" << fixed << setprecision(2) << salary << endl
            << "Длительность стажировки: " << internshipDuration << " мес.\n";
    }
};

int main() {
    setlocale(LC_ALL, "rus");
    Employee* employees[] = {
        new Manager("Алексей Колосов", 5000, 10),
        new Developer("Алексей Сотников", 6000, 4),
        new Intern("Павел Коволенко", 500, 5),
        new Intern("Михаил Михалев", 500, 2)
    };

    for (Employee* emp : employees) {
        cout << "\n=== Информация о сотруднике ===" << endl;
        emp->printDetails();
        cout << "Расчет бонуса: $" << emp->calculateBonus()
            << "\n===============================" << endl << endl;
        delete emp;
    }

    return 0;
}
